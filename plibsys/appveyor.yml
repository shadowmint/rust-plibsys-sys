environment:
        COVERITY_SCAN_PROJECT_NAME:       "saprykin/plibsys"
        COVERITY_SCAN_NOTIFICATION_EMAIL: "xelfium@gmail.com"
        COVERITY_SCAN_TOKEN:
                secure: 6WFXzLxAMuUovtYc+u8OoruE/V6zhK2M4mZlrszRBIA=

        matrix:
                - CMAKE_GENERATOR: "MinGW Makefiles"
                  USE_MINGW:       "1"
                - CMAKE_GENERATOR: "Visual Studio 9 2008"
                  USE_OLD_MSBUILD: "1"
                - CMAKE_GENERATOR: "Visual Studio 10 2010"
                - CMAKE_GENERATOR: "Visual Studio 10 2010 Win64"
                - CMAKE_GENERATOR: "Visual Studio 11 2012"
                - CMAKE_GENERATOR: "Visual Studio 11 2012 Win64"
                - CMAKE_GENERATOR: "Visual Studio 12 2013"
                - CMAKE_GENERATOR: "Visual Studio 12 2013 Win64"
                - CMAKE_GENERATOR: "Visual Studio 14 2015"
                - CMAKE_GENERATOR: "Visual Studio 14 2015 Win64"
                  USE_COVERITY:    "1"

os: Visual Studio 2015

configuration: Release

version: 0.0.1.{build}

branches:
        only:
                - master
                - appveyor_test

clone_folder: c:\projects\plibsys

build_script:
        - ps: >-
                $BUILD_DIR = "C:\Projects\plibsys-build";

                New-Item -ItemType directory -Path $BUILD_DIR | Out-Null;
                Set-Location $BUILD_DIR | Out-Null;

                If ($env:APPVEYOR_REPO_BRANCH -eq "appveyor_test") {
                        $VAR_BOOST_TESTS = "-DPLIBSYS_TESTS_STATIC=ON";
                        $VAR_BOOST_ROOT  = "-DBOOST_ROOT=C:\Libraries\boost_1_59_0";
                }

                If ($env:USE_MINGW -eq "1") {
                        $env:PATH   = "C:\MinGW\bin;C:\Program Files (x86)\CMake\bin";
                        $BUILD_TYPE = "-DCMAKE_BUILD_TYPE=$env:configuration";
                }

                If ($env:USE_OLD_MSBUILD -eq "1") {
                        $env:PATH = "C:\Windows\Microsoft.NET\Framework\v3.5;$env:PATH";
                }

                If ($env:USE_MINGW -eq "1") {
                        $BUILD_COMMAND = "mingw32-make";
                } Else {
                        $BUILD_COMMAND = "msbuild";
                        $BUILD_PARAMS  = @("/verbosity:normal", "$BUILD_DIR\plibsys.sln", "/p:Configuration=$env:configuration");
                }

                If ($env:USE_COVERITY -eq "1" -And $env:APPVEYOR_REPO_BRANCH -eq "appveyor_test") {
                        & nuget install PublishCoverity -o $BUILD_DIR;

                        $COVERITY_EXE = "$BUILD_DIR\PublishCoverity.0.11.0\tools\PublishCoverity.exe";

                        # Do not build tests for Coverity
                        & cmake -G"$env:CMAKE_GENERATOR" C:\Projects\plibsys;

                        & cov-build --dir "$BUILD_DIR\cov-int" $BUILD_COMMAND $BUILD_PARAMS;

                        & $COVERITY_EXE compress -o "$BUILD_DIR\coverity.zip" -i "$BUILD_DIR\cov-int";
                        & $COVERITY_EXE publish -z "$BUILD_DIR\coverity.zip" -r $env:COVERITY_SCAN_PROJECT_NAME -t $env:COVERITY_SCAN_TOKEN -e $env:COVERITY_SCAN_NOTIFICATION_EMAIL --codeVersion $env:APPVEYOR_BUILD_VERSION;
                }

                & cmake -G"$env:CMAKE_GENERATOR" $BUILD_TYPE $VAR_BOOST_TESTS $VAR_BOOST_ROOT C:\Projects\plibsys;
                & $BUILD_COMMAND $BUILD_PARAMS;

                If ($env:APPVEYOR_REPO_BRANCH -eq "appveyor_test") {
                        & ctest -V -C Release;
                }
